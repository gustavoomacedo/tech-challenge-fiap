---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
data:
  aspnetcore_environment: "Production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-add
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-add
  template:
    metadata:
      labels:
        app: api-add
    spec:
      containers:
      - name: api-add
        image: gustavoomacedo/tech-challenge-add:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: api-add
spec:
  selector:
    app: api-add
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 31080   # Porta NodePort para acesso externo
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-worker-add
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service-worker-add
  template:
    metadata:
      labels:
        app: service-worker-add
    spec:
      containers:
      - name: worker
        image: gustavoomacedo/tech-challenge-service-worker-add:latest
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-worker-delete
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-worker-delete
  template:
    metadata:
      labels:
        app: service-worker-delete
    spec:
      containers:
      - name: worker
        image: gustavoomacedo/tech-challenge-service-worker-delete:latest
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-worker-edit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-worker-edit
  template:
    metadata:
      labels:
        app: service-worker-edit
    spec:
      containers:
      - name: worker
        image: gustavoomacedo/tech-challenge-service-worker-edit:latest
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-delete
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-delete
  template:
    metadata:
      labels:
        app: api-delete
    spec:
      containers:
      - name: api-delete
        image: gustavoomacedo/tech-challenge-delete:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: api-delete
spec:
  selector:
    app: api-delete
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 31081   # Porta NodePort para acesso externo
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-update
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-update
  template:
    metadata:
      labels:
        app: api-update
    spec:
      containers:
      - name: api-update
        image: gustavoomacedo/tech-challenge-update:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
        - name: RABBITMQ_HOST
          value: rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: api-update
spec:
  selector:
    app: api-update
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 31082   # Porta NodePort para acesso externo
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-data
        emptyDir: {}  # Use PVC para persistência real
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
    tier: backend
  annotations:
    description: "Serviço RabbitMQ com acesso via NodePort para painel de gerenciamento"
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
    nodePort: 31672  # Porta NodePort para acesso externo ao painel RabbitMQ
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: gustavoomacedo/tech-challenge-api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aspnetcore_environment
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 31380  # ou deixe o Kubernetes gerar automaticamente
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
    nodePort: 31900  # Porta externa para acessar o Prometheus
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: gustavoomacedo/grafana-local:latest
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 31300  # Porta externa para acessar o Grafana
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest